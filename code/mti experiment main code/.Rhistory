instablephase=colSums(arfb,na.rm=T)>nmod*max.hor*0.20
plot(instablephase,type='l')
instablephase
DirCode
target.t=function(y.raw,horizon){
y=1200/horizon*log(y.raw/lag.exact(y.raw,horizon))
}
source(paste(DirCode,'/code/auxiliary code/lag.exact.R',sep=''))
cpi=read.csv(paste(DirCode,'/data/bundesbankrealtime/M.DE.S.P.PC1.PC150.R.I.csv',sep='')
,stringsAsFactors=F
,skip=4
,row.names=1)
cpi=cpi[5:nrow(cpi),ncol(cpi),drop=F]
infl=target.t(cpi,12)
infl=infl[row.names(infl)%in%data$ym,,drop=F]
plot(infl)
plot(infl[,2])
plot(infl[,1])
View(infl)
inflstart=grep('2005-11',infl)
inflstart
inflstart=grep('2005-11',row.names(infl))
inflend=grep('2015-01',row.names(infl))
ipdates=row.names(infl)[inflstart:inflend]
infls=infls[inflstart:inflend,1]
infls=infl[inflstart:inflend,1]
plot(infls)
plot(infls
,ylim=c(85,119-aa)
, xaxt = 'n'
,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,xaxs = 'i'
)
par(las=2
,mar=c(5.1,4,2,2.1)
)
aa=3
plot(infls
#      ,ylim=c(85,119-aa)
, xaxt = 'n'
,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,xaxs = 'i'
)
recstart=grep('2008-05',ipdates)
recend=grep('2009-01',ipdates)
recind=1:ncol(arfb)*0
recind[recstart:recend]=1
recstart=grep('2008-05',infldates)
recend=grep('2009-01',infldates)
infldates=row.names(infl)[inflstart:inflend]
recstart=grep('2008-05',infldates)
recend=grep('2009-01',infldates)
recind=1:ncol(arfb)*0
recind[recstart:recend]=1
recind
range(infls)
range.i=range(infls)
maxinfls=range(infls)[2]
aa=0.5
plot(infls
,ylim=c(0,maxinfls+aa)
, xaxt = 'n'
,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,xaxs = 'i'
)
lines(recind*(inflmax+0.2),type='p',bg='grey')
lines(recind*(inflsmax+0.2),type='p',bg='grey')
lines(recind*(maxinfls+0.2),type='p',bg='grey')
recind=1:ncol(arfb)*0
recind
recind=1:ncol(arfb)*-2
recind[recstart:recend]=1
lines(recind*(maxinfls+0.2),type='p',bg='grey')
plot(infls
,ylim=c(0,maxinfls+aa)
, xaxt = 'n'
,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,xaxs = 'i'
)
# recession
recstart=grep('2008-05',infldates)
recend=grep('2009-01',infldates)
recind=1:ncol(arfb)*-2
recind[recstart:recend]=1
lines(recind*(maxinfls+0.2),type='p',bg='grey')
abline(h=maxinfls+0.2
,lty=6
)
abline(h=maxinfls+0.1
,lty=6
)
text(y=maxinfls+0.2,x=90,'Recession')
names(instablephase)%in%row.names(infls)
names(instablephase)
row.names(infls)
infldates
instablephase.s=instablephase[names(instablephase)%in%infldates]
lines(instablephase.s*(maxinfls+0.3)
,type='p'
,pch=16
)
instablephase.s=instablephase[names(instablephase)%in%infldates]
lines(instablephase.s*(maxinfls+0.4)
,type='p'
,pch=16
)
text(y=maxinfls+0.4,x=90,'Forecast breakdowns')
abline(h=maxinfls+0.5
#        ,lty=6
)
ticks=seq(1,ncol(arfb),5)
ipdotticks=gsub('-',':',infldates)
axis(1, at=ticks, labels=ipdotticks[ticks]
,las=2
)
par(las=2
,mar=c(5.1,4,2,2.1)
)
aa=0.5
plot(infls
,ylim=c(0,maxinfls+aa)
, xaxt = 'n'
,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,xaxs = 'i'
)
# recession
recstart=grep('2008-05',infldates)
recend=grep('2009-01',infldates)
recind=1:ncol(arfb)*-2
recind[recstart:recend]=1
lines(recind*(maxinfls+0.2),type='p',bg='grey')
abline(h=maxinfls+0.1
,lty=6
)
text(y=maxinfls+0.2,x=90,'Recession')
# abline(h=120
#        ,lty=6
#        )
# forecast breakdowns more than 1/5 of models
instablephase.s=instablephase[names(instablephase)%in%infldates]
lines(instablephase.s*(maxinfls+0.4)
,type='p'
,pch=16
)
text(y=maxinfls+0.4,x=90,'Forecast breakdowns')
abline(h=maxinfls+0.5
#        ,lty=6
)
# plot(runif(10))
# legend('bottomright'
#        ,lty=c(0,0,1)
#        ,pch=c(1,16,NA)
#        ,c('recession','forecast breakdowns','industrial production')
#        ,bty='n'
#        )
# abline(h=116)
ticks=seq(1,ncol(arfb),5)
ipdotticks=gsub('-',':',infldates)
axis(1, at=ticks, labels=ipdotticks[ticks]
,las=2
)
axis(2,at=c(seq(85,110,5)),c(seq(85,110,5)))
plot(infls
,ylim=c(0,maxinfls+aa)
, xaxt = 'n'
#      ,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,xaxs = 'i'
)
plot(infls
,ylim=c(0,maxinfls+aa)
, xaxt = 'n'
#      ,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,xaxs = 'i'
)
# recession
recstart=grep('2008-05',infldates)
recend=grep('2009-01',infldates)
recind=1:ncol(arfb)*-2
recind[recstart:recend]=1
lines(recind*(maxinfls+0.2),type='p',bg='grey')
abline(h=maxinfls+0.1
,lty=6
)
text(y=maxinfls+0.2,x=90,'Recession')
# abline(h=120
#        ,lty=6
#        )
# forecast breakdowns more than 1/5 of models
instablephase.s=instablephase[names(instablephase)%in%infldates]
lines(instablephase.s*(maxinfls+0.4)
,type='p'
,pch=16
)
text(y=maxinfls+0.4,x=90,'Forecast breakdowns')
abline(h=maxinfls+0.5
#        ,lty=6
)
# plot(runif(10))
# legend('bottomright'
#        ,lty=c(0,0,1)
#        ,pch=c(1,16,NA)
#        ,c('recession','forecast breakdowns','industrial production')
#        ,bty='n'
#        )
# abline(h=116)
ticks=seq(1,ncol(arfb),5)
ipdotticks=gsub('-',':',infldates)
axis(1, at=ticks, labels=ipdotticks[ticks]
,las=2
)
axis(2,at=c(seq(85,110,5)),c(seq(85,110,5)))
# abline(v=grep('2008-05',colnames(arfb.end)))
# abline(v=grep('20
source('H:/git/zeit-2/code/preparing data/code for getting and preparing ZEIT articles/Bind_articles_together.R', echo=TRUE)
target
View(forecast)
source('H:/git/zeit-2/code/mti experiment main code/cpiex.R', echo=TRUE)
target
source('H:/git/zeit-2/code/mti experiment main code/cpiex.R', echo=TRUE)
source('H:/git/zeit-2/code/mti experiment main code/cpiex.R', echo=TRUE)
source('H:/git/zeit-2/code/mti experiment main code/cpiex.R', echo=TRUE)
source('H:/git/zeit-2/code/mti experiment main code/cpiex.R', echo=TRUE)
set[,var.tlag]=lag.exact(set[,var.tlag,drop=F]
,overview.nr[row.names(overview.nr)==var.tlag
,'lag'])
variables.tlag
variables.tlag=variables.tlag[is.na(variables.tlag)==F]
for (var.tlag in variables.tlag){
set[,var.tlag]=lag.exact(set[,var.tlag,drop=F]
,overview.nr[row.names(overview.nr)==var.tlag
,'lag'])
}
source('H:/git/zeit-2/code/mti experiment main code/cpiex.R', echo=TRUE)
target
source('H:/git/zeit-2/code/mti experiment main code/cpiex.R', echo=TRUE)
source('H:/git/zeit-2/code/mti experiment main code/cpiex.R', echo=TRUE)
source('H:/git/zeit-2/code/mti experiment main code/experiment.R', echo=TRUE)
source('H:/git/zeit-2/code/mti experiment main code/experiment.R', echo=TRUE)
DirCode='C:/Users/Dirk/Documents/GitHub/zeit-2'
# transformation function
target.t=function(y.raw,horizon){
y=1200/horizon*log(y.raw/lag.exact(y.raw,horizon))
}
source(paste(DirCode,'/code/auxiliary code/lag.exact.R',sep=''))
# getting last vintage cpi and cutting to mt-periods
cpi=read.csv(paste(DirCode,'/data/bundesbankrealtime/M.DE.S.P.PC1.PC150.R.I.csv',sep='')
,stringsAsFactors=F
,skip=4
,row.names=1)
cpi=cpi[5:nrow(cpi),ncol(cpi),drop=F]
infl=target.t(cpi,12)
df.unrevised=read.csv(paste(DirCode,'/data/data.csv'
,sep='')
,sep=','
,na.strings='NA'
,row.names=1
,stringsAsFactors=FALSE
)
media.mods=read.csv(paste(DirCode,'/results/full list of variables of interest with new names.csv',sep=''),stringsAsFactors=F)
df.media=df.unrevised[,c('ym',media.mods[,1])]
colnames(df.media)=c('ym',media.mods[,2])
df.media=df.media[grep('2001-01',df.media$ym):grep('2014-04',df.media$ym),]
df.media[,c('Monetary','Inflation')]=df.media[,c('Monetary','Inflation')]*100
infl=infl[row.names(infl)%in%df.media$ym,,drop=F]
# Export of descriptives --------------------------------------------------
descriptives.media.export=stargazer(df.media)
descriptives.media.export=gsub('159','160',descriptives.media.export)
DirCode='h:/Git/zeit-2'
# DirCode='C:/Users/Dirk/Documents/GitHub/zeit-2'
# transformation function
target.t=function(y.raw,horizon){
y=1200/horizon*log(y.raw/lag.exact(y.raw,horizon))
}
source(paste(DirCode,'/code/auxiliary code/lag.exact.R',sep=''))
# getting last vintage cpi and cutting to mt-periods
cpi=read.csv(paste(DirCode,'/data/bundesbankrealtime/M.DE.S.P.PC1.PC150.R.I.csv',sep='')
,stringsAsFactors=F
,skip=4
,row.names=1)
cpi=cpi[5:nrow(cpi),ncol(cpi),drop=F]
infl=target.t(cpi,12)
df.unrevised=read.csv(paste(DirCode,'/data/data.csv'
,sep='')
,sep=','
,na.strings='NA'
,row.names=1
,stringsAsFactors=FALSE
)
media.mods=read.csv(paste(DirCode,'/results/full list of variables of interest with new names.csv',sep=''),stringsAsFactors=F)
df.media=df.unrevised[,c('ym',media.mods[,1])]
colnames(df.media)=c('ym',media.mods[,2])
df.media=df.media[grep('2001-01',df.media$ym):grep('2014-04',df.media$ym),]
df.media[,c('Monetary','Inflation')]=df.media[,c('Monetary','Inflation')]*100
infl=infl[row.names(infl)%in%df.media$ym,,drop=F]
# Export of descriptives --------------------------------------------------
descriptives.media.export=stargazer(df.media)
descriptives.media.export=gsub('159','160',descriptives.media.export)
DirCode='h:/Git/zeit-2'
# DirCode='C:/Users/Dirk/Documents/GitHub/zeit-2'
# transformation function
target.t=function(y.raw,horizon){
y=1200/horizon*log(y.raw/lag.exact(y.raw,horizon))
}
source(paste(DirCode,'/code/auxiliary code/lag.exact.R',sep=''))
# getting last vintage cpi and cutting to mt-periods
cpi=read.csv(paste(DirCode,'/data/bundesbankrealtime/M.DE.S.P.PC1.PC150.R.I.csv',sep='')
,stringsAsFactors=F
,skip=4
,row.names=1)
cpi=cpi[5:nrow(cpi),ncol(cpi),drop=F]
infl=target.t(cpi,12)
df.unrevised=read.csv(paste(DirCode,'/data/data.csv'
,sep='')
,sep=','
,na.strings='NA'
,row.names=1
,stringsAsFactors=FALSE
)
media.mods=read.csv(paste(DirCode,'/results/full list of variables of interest with new names.csv',sep=''),stringsAsFactors=F)
df.media=df.unrevised[,c('ym',media.mods[,1])]
colnames(df.media)=c('ym',media.mods[,2])
df.media=df.media[grep('2001-01',df.media$ym):grep('2014-04',df.media$ym),]
df.media[,c('Monetary','Inflation')]=df.media[,c('Monetary','Inflation')]*100
infl=infl[row.names(infl)%in%df.media$ym,,drop=F]
# Export of descriptives --------------------------------------------------
descriptives.media.export=stargazer(df.media)
par(las=2
,mar=c(3,1,5,3)
)
# mt.s=(mt.s-mean(mt.s)+mean(cpi[,1]))*sd(cpi[,1])/sd(mt.s)
# aa=3
# par(mfrow=c(1,1))
names.automatic=colnames(df.media)[2:6]
par(mfrow=c(3,2))
for (lauf in 1:length(names.automatic)){
plot(df.media[,names.automatic[lauf]]
, xaxt = 'n'
#      ,yaxt='n'
,ylab=''#,mt.s.name
,xlab=''
,type='l'
#      ,xaxs = 'i'
,main=names.automatic[lauf]
,lty=1
)
par(new = TRUE)
plot(infl[,1]
, xaxt = 'n'
,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,lty=2
)
axis(side=4, at = pretty(range(infl[,1])))
#         mtext("cpi", side=4, line=3)
ticks=seq(1,nrow(infl),26)
dates=gsub('-',':',row.names(infl))
axis(1, at=ticks, labels=dates[ticks]
,las=2
)
}
names.automatic
names.automatic=names.automatic[c(2,4,5)]
names.automatic
names.automatic.displayed=names.automatic
names.automatic.displayed=gsub('simple','',names.automatic.displayed)
names.automatic.displayed
par(mfrow=c(3,1))
for (lauf in 1:length(names.automatic)){
plot(df.media[,names.automatic[lauf]]
, xaxt = 'n'
#      ,yaxt='n'
,ylab=''#,mt.s.name
,xlab=''
,type='l'
#      ,xaxs = 'i'
,main=names.automatic.displayed[lauf]
,lty=1
)
par(new = TRUE)
plot(infl[,1]
, xaxt = 'n'
,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,lty=2
)
axis(side=4, at = pretty(range(infl[,1])))
#         mtext("cpi", side=4, line=3)
ticks=seq(1,nrow(infl),26)
dates=gsub('-',':',row.names(infl))
axis(1, at=ticks, labels=dates[ticks]
,las=2
)
}
pdf(paste(DirCode,'/figs/automatic.indicators.pdf',sep=''))
par(mfrow=c(3,1))
for (lauf in 1:length(names.automatic)){
plot(df.media[,names.automatic[lauf]]
, xaxt = 'n'
#      ,yaxt='n'
,ylab=''#,mt.s.name
,xlab=''
,type='l'
#      ,xaxs = 'i'
,main=names.automatic.displayed[lauf]
,lty=1
)
par(new = TRUE)
plot(infl[,1]
, xaxt = 'n'
,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,lty=2
)
axis(side=4, at = pretty(range(infl[,1])))
#         mtext("cpi", side=4, line=3)
ticks=seq(1,nrow(infl),26)
dates=gsub('-',':',row.names(infl))
axis(1, at=ticks, labels=dates[ticks]
,las=2
)
}
dev.off()
pdf(paste(DirCode,'/figs/automatic.indicators.pdf',sep=''))
par(mfrow=c(3,1))
for (lauf in 1:length(names.automatic)){
plot(df.media[,names.automatic[lauf]]
, xaxt = 'n'
#      ,yaxt='n'
,ylab=''#,mt.s.name
,xlab=''
,type='l'
#      ,xaxs = 'i'
,main=names.automatic.displayed[lauf]
,lty=1
)
par(new = TRUE)
plot(infl[,1]
, xaxt = 'n'
,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,lty=2
)
axis(side=4, at = pretty(range(infl[,1])))
#         mtext("cpi", side=4, line=3)
ticks=seq(1,nrow(infl),26)
dates=gsub('-',':',row.names(infl))
axis(1, at=ticks, labels=dates[ticks]
,las=2
)
}
dev.off()
pdf(paste(DirCode,'/figs/automatic.indicators.pdf',sep=''))
pdf(paste(DirCode,'/figs/automatic.indicators.only.simple.pdf',sep=''))
par(mfrow=c(3,1))
for (lauf in 1:length(names.automatic)){
plot(df.media[,names.automatic[lauf]]
, xaxt = 'n'
#      ,yaxt='n'
,ylab=''#,mt.s.name
,xlab=''
,type='l'
#      ,xaxs = 'i'
,main=names.automatic.displayed[lauf]
,lty=1
)
par(new = TRUE)
plot(infl[,1]
, xaxt = 'n'
,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,lty=2
)
axis(side=4, at = pretty(range(infl[,1])))
#         mtext("cpi", side=4, line=3)
ticks=seq(1,nrow(infl),26)
dates=gsub('-',':',row.names(infl))
axis(1, at=ticks, labels=dates[ticks]
,las=2
)
}
dev.off()

#          paste('D',retest.raw,sep='')
# )
# testing the variables in retest again
# loading realtime data sets and unrevised data
load(paste(DirCode,'/data/realtime_sets_cutoffday_31.RData',sep=''))
df.unrevised=read.csv(paste(DirCode,'/data/data.csv'
,sep='')
,sep=','
,na.strings='NA'
,row.names=1
,stringsAsFactors=FALSE
)
# dates as row.names, dates out of df
dat.col=(grep('ym',colnames(df.unrevised))+1):ncol(df.unrevised)
row.names(df.unrevised)=df.unrevised[,'ym']
df.unrevised=df.unrevised[,dat.col]
rm(dat.col)
zeit.ind=grep('zeit',colnames(df.unrevised))
colnames(df.unrevised)=gsub('-','\\.',colnames(df.unrevised))
overview=read.csv(paste(DirCode,'/data/metadata.csv',sep=''),row.names=1)
row.names(overview)=gsub('-','\\.',row.names(overview))
# replacing "." with "-" and getting vector of names
names.nr=colnames(df.unrevised)
# names.nr[-grep('MT',names.nr)]=gsub('\\.','-',names.nr[-grep('MT',names.nr)])
# colnames(df.unrevised)=names.nr
# names.nr[grep('zeit',names.nr)]=gsub('-','\\.',names.nr[grep('zeit',names.nr)])
# getting overview of non-revised data
overview.nr=overview[names.nr,]
# Saving a complete version of unrevised data (below, some of them are lagged to take account of realtime publication lags)
df.unrevised.compl=df.unrevised # df.unrevised=df.unrevised.compl
if (zeitraus==1){
df.unrevised=df.unrevised[,-grep('zeit|rword',colnames(df.unrevised)),]
overview=overview[-grep('zeit|rword',row.names(overview)),]
overview.nr=overview.nr[-grep('zeit|rword',row.names(overview.nr)),]
names.nr=names.nr[-grep('zeit|rword',names.nr)]
}
View(overview)
setwd('h:/git/zeit-2/code/mti experiment main code/')
getwd()
source('EW.R')
tt=fbs
t3=fbs[[h]]
source('~/GitHub/zeit-2/code/mti EXPERIMENT main code/evaluation.R', echo=TRUE)
t=sapply(fbs,function(x) x[1,])
t=sapply(fbs,function(x) colSums(x,na.rm=T))
tl=sapply(t,length)
arfb=data.frame(matrix(NA,ncol=tl[1],nrow=length(t)))
colnames(arfb)=names(t[[1]])
for (i in 1:length(t)){
arfb[i,names(t[[i]])]=t[[i]]#*(i-2)
}
t=sapply(fbs,function(x) x[1,])
t=sapply(fbs,function(x) colSums(x,na.rm=T))
tl=sapply(t,length)
arfb=data.frame(matrix(NA,ncol=tl[1],nrow=length(t)))
colnames(arfb)=names(t[[1]])
View(arfb)
names(t[[i]])
t[[i]]
names(t[[i]])
for (i in 1:length(t)){
arfb[i,names(t[[i]])]=t[[i]]#*(i-2)
}
i
t=sapply(fbs,function(x) x[1,])
t=sapply(fbs,function(x) colSums(x,na.rm=T))
tl=sapply(t,length)
arfb=data.frame(matrix(NA,ncol=tl[1],nrow=length(t)))
colnames(arfb)=names(t[[1]])
i=1
arfb[i,names(t[[i]])]=t[[i]]#*(i-2)
View(arfb)
i=2
aa=t[[i]]
names(t[[i]]
)
arfb[i,names(t[[i]])]=t[[i]]#*(i-2)
View(arfb)
arfb[i,names(t[[i]])]
names(t[[i]])
colnames(arfb)
colnames(arfb)%in%names(t[[i]])
unique(names(t[[i]]))
arfb[i,colnames(arfb)%in%names(t[[i]])]=t[[i]]#*(i-2)
inn=colnames(arfb)[colnames(arfb)%in%names(t[[i]])]
inn
arfb[i,inn]=t[[i]][1:length(inn)]#*(i-2)
for (i in 1:length(t)){
inn=colnames(arfb)[colnames(arfb)%in%names(t[[i]])]
arfb[i,inn]=t[[i]][1:length(inn)]#*(i-2)
}
View(arfb)
ttt=t[[i]]
t[[i]]
ff=fbs[[i]]
View(ff)
View(result)
View(sfe)
gg=forecast.all[[1]]
View(gg)
View(fc)
t=sapply(fbs,function(x) x[1,])
ss=fbs[[1]]
View(ss)
ss=fbs[[2]]
View(ss)
t=sapply(fbs,function(x) colSums(x[sel.mods,],na.rm=T))
sel.mods
gg=fbs[[1]]
View(gg)
t=sapply(fbs,function(x) row.names(x)=row.names(result))
row.names(result)
t=sapply(fbs,function(x) row.names(x)=row.names(result)[1:(nrow(result)-2)])
t=sapply(fbs,function(x) colSums(x[sel.mods,],na.rm=T))
gg=fbs[[1]]
View(gg)
View(t)
t=sapply(fbs,function(x) x[1,])
gg=fbs[[1]]
View(gg)
rownames.t=row.names(result)[1:(nrow(result)-2)]
rownames.fbs=row.names(result)[1:(nrow(result)-2)]
t=sapply(fbs,function(x) row.names(x)=rownames.fbs)
t=lapply(fbs,function(x) row.names(x)=rownames.fbs)
aa=t[[1]]
str(gg)
gg1=gg
row.names(gg)=rownames.fbs
View(gg1)
gg1=data.frame(gg1)
View(gg)
ss=fbs
for (i in 1:12){
row.names(fbs[[i]])=rownams.fbs
}
for (i in 1:12){
row.names(fbs[[i]])=rownames.fbs
}
aa=fbs[[1]]
View(aa)
t=sapply(fbs,function(x) colSums(x[sel.mods,],na.rm=T))
tl=sapply(t,length)
arfb=data.frame(matrix(NA,ncol=tl[1],nrow=length(t)))
colnames(arfb)=names(t[[1]])
for (i in 1:length(t)){
inn=colnames(arfb)[colnames(arfb)%in%names(t[[i]])]
arfb[i,inn]=t[[i]][1:length(inn)]#*(i-2)
}
View(arfb)
plot(colSums(arfb,na.rm=T)>171*12*0.2,type='l')
plot(colSums(arfb,na.rm=T),type='l')
plot(colSums(arfb,na.rm=T)>173*12*0.25,type='l')
plot(colSums(arfb,na.rm=T)>173*12*0.15,type='l')
plot(colSums(arfb,na.rm=T)>173*12*0.1,type='l')
plot(colSums(arfb,na.rm=T)>173*12*0.5,type='l')
plot(colSums(arfb,na.rm=T)>173*12*0.3,type='l')
plot(colSums(arfb,na.rm=T)>173*12*0.25,type='l')
plot(colSums(arfb,na.rm=T)>173*12*0.45,type='l')
plot(colSums(arfb,na.rm=T)>173*12*0.4,type='l')
plot(colSums(arfb,na.rm=T)>173*12*0.33,type='l')
plot(colSums(arfb,na.rm=T),type='l')
abline(h=300)
173*12
173*12/300
plot(colSums(arfb,na.rm=T)>173*12*0.07,type='l')
2076/300
300/2076
plot(colSums(arfb,na.rm=T)>173*12*0.15,type='l')
plot(colSums(arfb,na.rm=T)>173*12*0.20,type='l')
plot(colSums(arfb,na.rm=T)>173*12*0.18,type='l')
plot(colSums(arfb,na.rm=T)/2076*100,type='l')
nmod=length(sel.mods)
plot(colSums(arfb,na.rm=T)/nmod*max.hor*100,type='l')
plot(colSums(arfb,na.rm=T)>nmod*max.hor*0.18,type='l')
abline(v=grep('2010-06',colnames(arfb)))
abline(v=grep('2008-12',colnames(arfb)))
arfb.end=arfb[9:12,grep('2007-01',colnames(arfb)):ncol(arfb)]
arfb.end
View(arfb.end)
View(fbpall)
par(las=2
,mar=c(5.1,4,2,2.1)
)
plot(unlist(arfb.end[4,])
,ylim=c(8.5,12.5)
, xaxt = 'n'
,yaxt='n'
,ylab='forecast horizon'
,xlab=''
)
lines(unlist(arfb.end[3,]),type='p')
lines(unlist(arfb.end[2,]),type='p')
lines(unlist(arfb.end[1,]),type='p')
ticks=seq(1,ncol(arfb.end),5)
labels=colnames(arfb.end)
axis(1, at=ticks, labels=labels[ticks]
#      ,las=2
)
axis(2,at=c(9,10,11,12),labels=c('9','10','11','12'))
abline(v=grep('2008-05',colnames(arfb.end)))
abline(v=grep('2009-01',colnames(arfb.end)))
par(par.s)
arfb.end
ar(las=2
,mar=c(5.1,4,2,2.1)
)
plot(ips
#      ,ylim=c(8.5,12.5)
, xaxt = 'n'
#      ,yaxt='n'
,ylab=''
,xlab=''
,type='l'
)
ticks=seq(1,ncol(arfb.end),5)
labels=colnames(arfb.end)
axis(1, at=ticks, labels=labels[ticks]
,las=2
)
axis(2,at=c(9,10,11,12),labels=c('9','10','11','12'))
abline(v=grep('2008-05',colnames(arfb.end)))
abline(v=grep('2009-01',colnames(arfb.end)))
par(las=2
,mar=c(5.1,4,2,2.1)
)
plot(ips
#      ,ylim=c(8.5,12.5)
, xaxt = 'n'
#      ,yaxt='n'
,ylab=''
,xlab=''
,type='l'
)
ticks=seq(1,ncol(arfb.end),5)
labels=colnames(arfb.end)
axis(1, at=ticks, labels=labels[ticks]
,las=2
)
axis(2,at=c(9,10,11,12),labels=c('9','10','11','12'))
abline(v=grep('2008-05',colnames(arfb.end)))
abline(v=grep('2009-01',colnames(arfb.end)))
plot(colSums(arfb)>171*12/4
#      ,ylim=c(8.5,12.5)
, xaxt = 'n'
,yaxt='n'
,ylab='forecast horizon'
,xlab=''
,type='l'
)
plot(colSums(arfb,na.rm=T)>nmod*max.hor*0.20,type='l')
colSums(arfb,na.rm=T)>nmod*max.hor*0.20
20percentphase=colSums(arfb,na.rm=T)>nmod*max.hor*0.20
20percentphase=colSums(arfb,na.rm=T)>nmod*max.hor*0.20
instablephase=colSums(arfb,na.rm=T)>nmod*max.hor*0.20
plot(instablephase,type='l')
instablephase
DirCode
target.t=function(y.raw,horizon){
y=1200/horizon*log(y.raw/lag.exact(y.raw,horizon))
}
source(paste(DirCode,'/code/auxiliary code/lag.exact.R',sep=''))
cpi=read.csv(paste(DirCode,'/data/bundesbankrealtime/M.DE.S.P.PC1.PC150.R.I.csv',sep='')
,stringsAsFactors=F
,skip=4
,row.names=1)
cpi=cpi[5:nrow(cpi),ncol(cpi),drop=F]
infl=target.t(cpi,12)
infl=infl[row.names(infl)%in%data$ym,,drop=F]
plot(infl)
plot(infl[,2])
plot(infl[,1])
View(infl)
inflstart=grep('2005-11',infl)
inflstart
inflstart=grep('2005-11',row.names(infl))
inflend=grep('2015-01',row.names(infl))
ipdates=row.names(infl)[inflstart:inflend]
infls=infls[inflstart:inflend,1]
infls=infl[inflstart:inflend,1]
plot(infls)
plot(infls
,ylim=c(85,119-aa)
, xaxt = 'n'
,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,xaxs = 'i'
)
par(las=2
,mar=c(5.1,4,2,2.1)
)
aa=3
plot(infls
#      ,ylim=c(85,119-aa)
, xaxt = 'n'
,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,xaxs = 'i'
)
recstart=grep('2008-05',ipdates)
recend=grep('2009-01',ipdates)
recind=1:ncol(arfb)*0
recind[recstart:recend]=1
recstart=grep('2008-05',infldates)
recend=grep('2009-01',infldates)
infldates=row.names(infl)[inflstart:inflend]
recstart=grep('2008-05',infldates)
recend=grep('2009-01',infldates)
recind=1:ncol(arfb)*0
recind[recstart:recend]=1
recind
range(infls)
range.i=range(infls)
maxinfls=range(infls)[2]
aa=0.5
plot(infls
,ylim=c(0,maxinfls+aa)
, xaxt = 'n'
,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,xaxs = 'i'
)
lines(recind*(inflmax+0.2),type='p',bg='grey')
lines(recind*(inflsmax+0.2),type='p',bg='grey')
lines(recind*(maxinfls+0.2),type='p',bg='grey')
recind=1:ncol(arfb)*0
recind
recind=1:ncol(arfb)*-2
recind[recstart:recend]=1
lines(recind*(maxinfls+0.2),type='p',bg='grey')
plot(infls
,ylim=c(0,maxinfls+aa)
, xaxt = 'n'
,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,xaxs = 'i'
)
# recession
recstart=grep('2008-05',infldates)
recend=grep('2009-01',infldates)
recind=1:ncol(arfb)*-2
recind[recstart:recend]=1
lines(recind*(maxinfls+0.2),type='p',bg='grey')
abline(h=maxinfls+0.2
,lty=6
)
abline(h=maxinfls+0.1
,lty=6
)
text(y=maxinfls+0.2,x=90,'Recession')
names(instablephase)%in%row.names(infls)
names(instablephase)
row.names(infls)
infldates
instablephase.s=instablephase[names(instablephase)%in%infldates]
lines(instablephase.s*(maxinfls+0.3)
,type='p'
,pch=16
)
instablephase.s=instablephase[names(instablephase)%in%infldates]
lines(instablephase.s*(maxinfls+0.4)
,type='p'
,pch=16
)
text(y=maxinfls+0.4,x=90,'Forecast breakdowns')
abline(h=maxinfls+0.5
#        ,lty=6
)
ticks=seq(1,ncol(arfb),5)
ipdotticks=gsub('-',':',infldates)
axis(1, at=ticks, labels=ipdotticks[ticks]
,las=2
)
par(las=2
,mar=c(5.1,4,2,2.1)
)
aa=0.5
plot(infls
,ylim=c(0,maxinfls+aa)
, xaxt = 'n'
,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,xaxs = 'i'
)
# recession
recstart=grep('2008-05',infldates)
recend=grep('2009-01',infldates)
recind=1:ncol(arfb)*-2
recind[recstart:recend]=1
lines(recind*(maxinfls+0.2),type='p',bg='grey')
abline(h=maxinfls+0.1
,lty=6
)
text(y=maxinfls+0.2,x=90,'Recession')
# abline(h=120
#        ,lty=6
#        )
# forecast breakdowns more than 1/5 of models
instablephase.s=instablephase[names(instablephase)%in%infldates]
lines(instablephase.s*(maxinfls+0.4)
,type='p'
,pch=16
)
text(y=maxinfls+0.4,x=90,'Forecast breakdowns')
abline(h=maxinfls+0.5
#        ,lty=6
)
# plot(runif(10))
# legend('bottomright'
#        ,lty=c(0,0,1)
#        ,pch=c(1,16,NA)
#        ,c('recession','forecast breakdowns','industrial production')
#        ,bty='n'
#        )
# abline(h=116)
ticks=seq(1,ncol(arfb),5)
ipdotticks=gsub('-',':',infldates)
axis(1, at=ticks, labels=ipdotticks[ticks]
,las=2
)
axis(2,at=c(seq(85,110,5)),c(seq(85,110,5)))
plot(infls
,ylim=c(0,maxinfls+aa)
, xaxt = 'n'
#      ,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,xaxs = 'i'
)
plot(infls
,ylim=c(0,maxinfls+aa)
, xaxt = 'n'
#      ,yaxt='n'
,ylab=''
,xlab=''
,type='l'
,xaxs = 'i'
)
# recession
recstart=grep('2008-05',infldates)
recend=grep('2009-01',infldates)
recind=1:ncol(arfb)*-2
recind[recstart:recend]=1
lines(recind*(maxinfls+0.2),type='p',bg='grey')
abline(h=maxinfls+0.1
,lty=6
)
text(y=maxinfls+0.2,x=90,'Recession')
# abline(h=120
#        ,lty=6
#        )
# forecast breakdowns more than 1/5 of models
instablephase.s=instablephase[names(instablephase)%in%infldates]
lines(instablephase.s*(maxinfls+0.4)
,type='p'
,pch=16
)
text(y=maxinfls+0.4,x=90,'Forecast breakdowns')
abline(h=maxinfls+0.5
#        ,lty=6
)
# plot(runif(10))
# legend('bottomright'
#        ,lty=c(0,0,1)
#        ,pch=c(1,16,NA)
#        ,c('recession','forecast breakdowns','industrial production')
#        ,bty='n'
#        )
# abline(h=116)
ticks=seq(1,ncol(arfb),5)
ipdotticks=gsub('-',':',infldates)
axis(1, at=ticks, labels=ipdotticks[ticks]
,las=2
)
axis(2,at=c(seq(85,110,5)),c(seq(85,110,5)))
# abline(v=grep('2008-05',colnames(arfb.end)))
# abline(v=grep('20
source('H:/git/zeit-2/code/preparing data/code for getting and preparing ZEIT articles/Bind_articles_together.R', echo=TRUE)
target
View(forecast)
source('H:/git/zeit-2/code/mti experiment main code/cpiex.R', echo=TRUE)
target
source('H:/git/zeit-2/code/mti experiment main code/cpiex.R', echo=TRUE)
source('H:/git/zeit-2/code/mti experiment main code/cpiex.R', echo=TRUE)
source('H:/git/zeit-2/code/mti experiment main code/cpiex.R', echo=TRUE)
source('H:/git/zeit-2/code/mti experiment main code/cpiex.R', echo=TRUE)
set[,var.tlag]=lag.exact(set[,var.tlag,drop=F]
,overview.nr[row.names(overview.nr)==var.tlag
,'lag'])
variables.tlag
variables.tlag=variables.tlag[is.na(variables.tlag)==F]
for (var.tlag in variables.tlag){
set[,var.tlag]=lag.exact(set[,var.tlag,drop=F]
,overview.nr[row.names(overview.nr)==var.tlag
,'lag'])
}
source('H:/git/zeit-2/code/mti experiment main code/cpiex.R', echo=TRUE)
target
source('H:/git/zeit-2/code/mti experiment main code/cpiex.R', echo=TRUE)
source('H:/git/zeit-2/code/mti experiment main code/cpiex.R', echo=TRUE)
source('H:/git/zeit-2/code/mti experiment main code/experiment.R', echo=TRUE)
source('H:/git/zeit-2/code/mti experiment main code/experiment.R', echo=TRUE)

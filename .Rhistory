sets[[1]]
sets[[1]]=M.DE.Y.I.IP1.AA020.C.I[, 1]
text=paste('sets[[',vint,']][,',var.i,']=',var.used$variable[1],'[,',vint,']',sep='')
test=sets[[1]]
sets[[vint]]=data.frame(matrix(NA,nrow=nrow(var),ncol=nvar))
text=paste('sets[[',vint,']][,',var.i,']=',var.used$variable[1],'[,',vint,']',sep='')
eval(parse(text=text))
}
for (vint in 1:nvint){
sets[[vint]]=data.frame(matrix(NA,nrow=nrow(var),ncol=nvar))
for (var.i in 1:nvar){
text=paste('sets[[',vint,']][,',var.i,']=',var.used$variable[1],'[,',vint,']',sep='')
eval(parse(text=text))
}
}
test=sets[[20]]
View(test)
text
for (vint in 1:nvint){
sets[[vint]]=data.frame(matrix(NA,nrow=nrow(var),ncol=nvar))
for (var.i in 1:nvar){
text=paste('sets[[',vint,']][,',var.i,']=',var.used$variable[var.i],'[,',vint,']',sep='')
eval(parse(text=text))
}
}
var.used$variable[var.i]
var.i
vint
View(var.used)
text
M.DE.Y.I.IO1.ACM02.C.I[,238]
test=M.DE.Y.I.IO1.ACM02.C.I
View(test)
colnames(test)
View(var)
colnames(var)
text=paste('sets[[',vint,']][,',var.i,']=',var.used$variable[var.i],'[,',vint,']',sep='')
text
text=paste('sets[[',vint,']][,',var.i,']=colnames(',var.used$variable[var.i],')',sep='')
text
text=paste('var=',var.used$variable,sep='')
View(var)
vintvar=colnames(var)
vintvar=strsplit(vintvar)
vintvar=strsplit(vintvar,'.')
vintvar=sapply(vintvar,function(x)x)
View(vintvar)
vintvar=sapply(vintvar,function(x) x)
head(vintvar)
vintvar
vintvar=colnames(var)
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,nvintvar,3)
vintvar[1]
strsplit(vintvar[1],'.')
strsplit(vintvar[1],'\\.')
strsplit(gsub('X','',vintvar[1]),'\\.')
sapply(strsplit(gsub('X','',vintvar[1]),'\\.'),function(x) x)
vintvart=matrix(NA,3,nvintvar)
for (i in 1:nvintvar){
vintvart[,i]=sapply(strsplit(gsub('X','',vintvar[1]),'\\.'),function(x) x)
}
View(vintvart)
for (i in 1:nvintvar){
vintvart[,i]=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
}
View(vintvart)
for (var.i in 1:nvar){
text=paste('var=',var.used$variable,sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,3,nvintvar)
for (i in 1:nvintvar){
vintvart[,i]=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
}
vintu[[var.i]]=vintvart
}
vintu=vector(nvar,mode='list')
for (var.i in 1:nvar){
text=paste('var=',var.used$variable,sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,3,nvintvar)
for (i in 1:nvintvar){
vintvart[,i]=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
}
vintu[[var.i]]=vintvart
}
vintu[[1]]
for (var.i in 1:nvar){
text=paste('var=',var.used$variable,sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,3,nvintvar)
for (i in 1:nvintvar){
vintvart[,i]=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
}
vintu[[var.i]]=vintvart
ncol(vintvart)
}
for (var.i in 1:nvar){
text=paste('var=',var.used$variable,sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,3,nvintvar)
for (i in 1:nvintvar){
vintvart[,i]=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
}
vintu[[var.i]]=vintvart
print(ncol(vintvart)        )
}
t1=vintu[[1]]
t2=vintu[[2]]
View(`t2`)
View(`t1`)
t3=vintu[[3]]
View(`t3`)
t1-t3
t1=as.integer(t1)
t2=as.integer(t2)
t1-t2
for (var.i in 1:nvar){
text=paste('var',var.i,'=',var.used$variable,sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,3,nvintvar)
for (i in 1:nvintvar){
vintvart[,i]=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
}
vintu[[var.i]]=vintvart
print(ncol(vintvart)        )
}
View(var1)
View(var2)
for (var.i in 1:nvar){
text=paste('var=',var.used$variable[var.i],sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,3,nvintvar)
for (i in 1:nvintvar){
vintvart[,i]=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
}
vintu[[var.i]]=vintvart
print(ncol(vintvart)        )
}
tt=vintvart
tt=as.integer(tt,drop=F)
tt=vintvart
tt=as.matrix(as.integer(tt,drop=F),nrow=3)
tt=matrix(as.integer(tt,drop=F),nrow=3)
View(tt)
for (var.i in 1:nvar){
text=paste('var=',var.used$variable[var.i],sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,3,nvintvar)
for (i in 1:nvintvar){
vintvart[,i]=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
}
vintu[[var.i]]=vintvart[1:2,]
print(ncol(vintvart)        )
}
vintvart[,i]
ym=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
paste(ym[1:2],sep='')
paste(ym[1:2],sep='',col=',')
paste(ym[1:2],collapse=',')
paste(ym[1:2],collapse='.')
for (var.i in 1:nvar){
text=paste('var=',var.used$variable[var.i],sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,1,nvintvar)
for (i in 1:nvintvar){
ym=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
vintvart[,i]=paste(ym[1:2],collapse='.')
}
vintu[[var.i]]=vintvart[1:2,]
print(ncol(vintvart)        )
}
for (var.i in 1:nvar){
text=paste('var=',var.used$variable[var.i],sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,1,nvintvar)
for (i in 1:nvintvar){
ym=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
vintvart[,i]=paste(ym[1:2],collapse='.')
}
vintu[[var.i]]=vintvart
print(ncol(vintvart)        )
}
vintu[[1]]%in%vintu[[3]]
sum(!vintu[[1]]%in%vintu[[3]])
duplicated(vintu)
duplicated(c(vintu[[1]],vintu[[2]],vintu[[3]],vintu[[4]],vintu[[5]]))
vintu=matrix(NA,nvar,240)
t=seq(6,12,240)
?seq
t=seq(1,12,length.out=240)
t=seq(1,240,12)
t=seq(1,240,1)
t=seq(1,240,1,along.with=12)
t=seq(1,240along.with=12)
t=seq(1,240,along.with=12)
vintu[[1]]
vintu=matrix(NA,nvar,240)
for (var.i in 1:nvar){
text=paste('var=',var.used$variable[var.i],sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,1,nvintvar)
for (i in 1:nvintvar){
ym=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
vintvart[,i]=paste(ym[1:2],collapse='.')
}
vintu[[var.i]]=vintvart
print(ncol(vintvart)        )
}
test=vintu[1]
for (var.i in 1:nvar){
text=paste('var=',var.used$variable[var.i],sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,1,nvintvar)
for (i in 1:nvintvar){
ym=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
vintvart[,i]=paste(ym[1:2],collapse='.')
}
vintu[[1]]=vintvart
print(ncol(vintvart)        )
}
vintu=vector(nvar,mode='list')
for (var.i in 1:nvar){
text=paste('var=',var.used$variable[var.i],sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,1,nvintvar)
for (i in 1:nvintvar){
ym=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
vintvart[,i]=paste(ym[1:2],collapse='.')
}
vintu[[1]]=vintvart
print(ncol(vintvart)        )
}
test=vintu[[1]]
View(test)
dates=matrix(NA,260,5)
dates=matrix(NA,260,6)
dates[1:6,1]=1:6
vintu[[2]]
for (var.i in 1:nvar){
text=paste('var=',var.used$variable[var.i],sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,1,nvintvar)
for (i in 1:nvintvar){
ym=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
vintvart[,i]=paste(ym[1:2],collapse='.')
}
vintu[[1]]=vintvart
print(ncol(vintvart)        )
}
vintu[[2]]
vintu[2]
vintu=vector(nvar,mode='list')
for (var.i in 1:nvar){
text=paste('var=',var.used$variable[var.i],sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,1,nvintvar)
for (i in 1:nvintvar){
ym=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
vintvart[,i]=paste(ym[1:2],collapse='.')
}
vintu[[1]]=vintvart
print(ncol(vintvart)        )
}
for (var.i in 1:nvar){
text=paste('var=',var.used$variable[var.i],sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,1,nvintvar)
for (i in 1:nvintvar){
ym=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
vintvart[,i]=paste(ym[1:2],collapse='.')
}
vintu[[var.i]]=vintvart
print(ncol(vintvart)        )
}
View(test)
for (var.i in 1:nvar){
text=paste('var=',var.used$variable[var.i],sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,1,nvintvar)
for (i in 1:nvintvar){
ym=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
vintvart[,i]=paste(ym[1:2],collapse='.')
}
vintu[[var.i]]=t(vintvart)
print(ncol(vintvart)        )
}
test=vintu[[1]]
View(test)
out=260-7
?rep
dates[7:260,1]=rep(1:12,out)
rep(1:12,out)
out
dates[7:260,1]=rep(1:12,length.out=out)
rep(1:12,length.out=out)
out=length(7:260)
dates[7:260,1]=rep(1:12,length.out=out)
View(dates)
dates[1:6,1]=6:12
dates[1:6,1]=7:12
dates[1:7,1]=6:12
out=length(8:260)
dates[7:260,1]=rep(1:12,length.out=out)
dates[8:260,1]=rep(1:12,length.out=out)
dates=matrix(NA,260,2)
dates[1:7,2]=1995
years=1996:2015
years=rep(years,12)
out
years=rep(years,12,each)
?rep
years=rep(years,each=12)
years=1996:2015
years=rep(years,each=12)
View(years)
View(dates)
dates[1:7,1]=6:12
out=length(8:260)
dates[8:260,1]=rep(1:12,length.out=out)
dates[1:7,2]=1995
View(dates)
test=vintu[[1]]
test
View(var1)
years
for (var.i in 1:nvar){
text=paste('var=',var.used$variable[var.i],sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,1,nvintvar)
for (i in 1:nvintvar){
ym=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
vintvart[,i]=paste(ym[1:2],collapse='.')
}
vintu[[var.i]]=t(vintvart)
print(ncol(vintvart)        )
text=paste('var.',var.i,'=',var,sep='')
eval(parse(text=text))
}
var.i
paste('var.',var.i,'=',var,sep='')
var.i
text=paste('var.',var.i,'=var',sep='')
for (var.i in 1:nvar){
text=paste('var=',var.used$variable[var.i],sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,1,nvintvar)
for (i in 1:nvintvar){
ym=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
vintvart[,i]=paste(ym[1:2],collapse='.')
}
vintu[[var.i]]=t(vintvart)
print(ncol(vintvart)        )
text=paste('var.',var.i,'=var',sep='')
eval(parse(text=text))
}
View(var.3)
View(vintu[[1]])
colnames(var.1)
duplicate(vintu[1])
duplicated(vintu[1])
duplicated(c(vintu[1]))
duplicated(c(vintu[[1]]))
colnames(var.1)[duplicated(c(vintu[[1]]))]
dupl=which(duplicated(c(vintu[[1]])))
dupl
colnames(var.1)[c(dupl,dupl+1)]
colnames(var.1)[c(dupl,dupl-1)]
vintu[[1]]=duplicated(vintu[[1]])
vintu[[1]]
for (var.i in 1:nvar){
text=paste('var=',var.used$variable[var.i],sep='')
eval(parse(text=text))
vintvar=colnames(var)
nvintvar=length(vintvar)
vintvart=matrix(NA,1,nvintvar)
for (i in 1:nvintvar){
ym=sapply(strsplit(gsub('X','',vintvar[i]),'\\.'),function(x) x)
vintvart[,i]=paste(ym[1:2],collapse='.')
}
vintu[[var.i]]=t(vintvart)
print(ncol(vintvart)        )
text=paste('var.',var.i,'=var',sep='')
eval(parse(text=text))
}
dupl=which(duplicated(c(vintu[[1]])))
vintu[[1]][dupl]
vintu[[1]][c(dupl-1,dupl)]
colnames(var.1)[c(dupl,dupl-1)]
matrix(colnames(var.1)[c(dupl,dupl-1)],nrow=2)
matrix(colnames(var.1)[c(dupl,dupl-1)],ncol=2)
doppel=matrix(colnames(var.1)[c(dupl,dupl-1)],ncol=2)
View(variable)
View(variable.sel)
#  ------------------------------------------------------------------------
# Starting values (do not comment) ---------------------------------------------------------
#  ------------------------------------------------------------------------
wd="h:/git/zeit-2"
setwd(wd)
dir.rt=paste(wd,'/data',sep='')
#  ------------------------------------------------------------------------
# Downloading and storing Data ---------------------------------------------------------
#  ------------------------------------------------------------------------
library("XLConnect")
library("xlsx")
# dir.create(dir.rt)
# getting nodes
nodeaddress='http://www.bundesbank.de/Navigation/EN/Statistics/Time_series_databases/Real_Time_Data/realtime_zeitreihen_node.html'
nodehtml=readLines(nodeaddress)
nodes_id=grep('] <',nodehtml)
nodes=nodehtml[nodes_id]
# View(nodes)
nodes=sapply(strsplit(nodes,'>'),function(x)x[2])
nodes=gsub(' </a||]','',nodes)
nodes=t(sapply(strsplit(nodes,'\\['),function(x)x))
nodes=unique(nodes)
# searching the index page of data base -----------------------------------
startaddress='http://www.bundesbank.de/Navigation/EN/Statistics/Time_series_databases/Real_Time_Data/realtime_zeitreihen_node.html?openAll=true'
fileaddress=paste(startaddress,'files/',sep='')
starthtml=readLines(startaddress)
# write.csv(starthtml,'starthtml.txt') # for inspection of starthtml only
# getting labels
# View(starthtml)
labels_id=grep('] <',starthtml)
labels=starthtml[labels_id]
# View(labels)
labels=sapply(strsplit(labels,'>'),function(x)x[2])
labels=gsub(' </a||]','',labels)
labels=t(sapply(strsplit(labels,'\\['),function(x)x))
labels=unique(labels)
labels[,1]=tolower(labels[,1])
labels=unique(labels)
labels=labels[-grep('at constant prices',labels[,1]),]
labels=labels[-grep('at current prices, flows',labels[,1]),]
labels.ordered=labels[order(labels[,2]),]
labels=data.frame(labels,stringsAsFactors=F)
variable_index=regexec("[AQM]\\.DE\\.[A-Z0-9\\.]{17}",starthtml)
variable_vector=regmatches(starthtml,variable_index)#[[1]][2]
for (i in length(variable_vector):1){
if (length(variable_vector[[i]])==0){variable_vector[[i]]=NULL}
}
rm(i)
variable.names <- unlist(variable_vector)
View(variable.names)
for (i in 1:length(variable.names)){
download.file(paste("http://www.bundesbank.de/cae/servlet/StatisticDownload?tsId=",variable.names[i],"&rtd_csvFormat=en&rtd_fileFormat=csv&mode=rtd&downloadType=matrix", sep=""), paste(dir.rt,'/bubart/',variable.names[i],".csv",sep=''),mode='wb')
}
i
length(variable.names)
for (i in 574:length(variable.names)){
download.file(paste("http://www.bundesbank.de/cae/servlet/StatisticDownload?tsId=",variable.names[i],"&rtd_csvFormat=en&rtd_fileFormat=csv&mode=rtd&downloadType=matrix", sep=""), paste(dir.rt,'/bubart/',variable.names[i],".csv",sep=''),mode='wb')
}
i
for (i in 637:length(variable.names)){
download.file(paste("http://www.bundesbank.de/cae/servlet/StatisticDownload?tsId=",variable.names[i],"&rtd_csvFormat=en&rtd_fileFormat=csv&mode=rtd&downloadType=matrix", sep=""), paste(dir.rt,'/bubart/',variable.names[i],".csv",sep=''),mode='wb')
}
for (i in 637:length(variable.names)){
download.file(paste("http://www.bundesbank.de/cae/servlet/StatisticDownload?tsId=",variable.names[i],"&rtd_csvFormat=en&rtd_fileFormat=csv&mode=rtd&downloadType=matrix", sep=""), paste(dir.rt,'/bubart/',variable.names[i],".csv",sep=''),mode='wb')
}
for (i in 637:length(variable.names)){
download.file(paste("http://www.bundesbank.de/cae/servlet/StatisticDownload?tsId=",variable.names[i],"&rtd_csvFormat=en&rtd_fileFormat=csv&mode=rtd&downloadType=matrix", sep=""), paste(dir.rt,'/bubart/',variable.names[i],".csv",sep=''),mode='wb')
}
for (i in 638:length(variable.names)){
download.file(paste("http://www.bundesbank.de/cae/servlet/StatisticDownload?tsId=",variable.names[i],"&rtd_csvFormat=en&rtd_fileFormat=csv&mode=rtd&downloadType=matrix", sep=""), paste(dir.rt,'/bubart/',variable.names[i],".csv",sep=''),mode='wb')
}
i
for (i in 637:length(variable.names)){
download.file(paste("http://www.bundesbank.de/cae/servlet/StatisticDownload?tsId=",variable.names[i],"&rtd_csvFormat=en&rtd_fileFormat=csv&mode=rtd&downloadType=matrix", sep=""), paste(dir.rt,'/bubart/',variable.names[i],".csv",sep=''),mode='wb')
}
variable.names[637]='M.DE.S.P.PC1.PC200'
for (i in 637:length(variable.names)){
download.file(paste("http://www.bundesbank.de/cae/servlet/StatisticDownload?tsId=",variable.names[i],"&rtd_csvFormat=en&rtd_fileFormat=csv&mode=rtd&downloadType=matrix", sep=""), paste(dir.rt,'/bubart/',variable.names[i],".csv",sep=''),mode='wb')
}
variable.names <- unlist(variable_vector)
variable.names[637]

save.image("F:/Hertie School of Governance/Vorlesung/cons.RData")
plot(cons)
plot(cons,data=cons)
save.image("F:/Hertie School of Governance/Vorlesung/cons.RData")
letters(1:6)
letters[1:3]
LETTERS[1:3]
month.ab[1:6]
month.abb[1:6]
month.name[1:6]
cummin (c(3:1 , 2:0 , 4:2) )
(c(3:1 , 2:0 , 4:2) )
myframe[,1]
DirCode='H:/git/zeit-2' # main directory
meta=read.csv(paste(DirCode,'/data/zeit indikatoren/article_ergebnis.csv',sep='')
,stringsAsFactors=F
)
meta$issue=paste(meta$i_year,'.',meta$i_month,sep='')
meta=meta[,-1]
colnames(meta)[grep('art_num',colnames(meta))]='id'
meta$id=paste(meta$issue,'.',meta$id,sep='')
# correcting some dates  --------------------------------------------------
most.freq.date=function(bymeta){
datesissue=bymeta$date
totaldatesissue=length(datesissue)
if ((sum(datesissue=='1998-04-23')+sum(datesissue=='1899-12-31'))==totaldatesissue){
mfreqdate='1998-04-23'
return(mfreqdate)
}
if (sum(datesissue=='1899-12-31')>0){
datesissue=datesissue[-which(datesissue=='1899-12-31')]}
if (sum(datesissue=='1998-04-23')>0){
datesissue=datesissue[-which(datesissue=='1998-04-23')]}
ndates=length(datesissue)
dates=table(datesissue)
mfreq=which.max(dates)
mfreqdate=names(dates)[mfreq]
return(mfreqdate)
}
newdate=by(meta[,'date',drop=F],INDICES=meta$issue,FUN=most.freq.date)
narticle=nrow(meta)
t=sapply(1:narticle,function(x) newdate[as.character(meta$issue[x])] )
t=unlist(t)
# meta$olddate=meta$date
meta$date=t
# individual corrections
meta[which(meta$issue=='2008.40'),'date']='2008-09-25'
meta[which(meta$issue=='2008.44'),'date']='2008-10-23'
plot(table(meta$date))
# correcting year, month and day
t=strsplit(meta$date,'-')#[[1]][1]
meta$year=sapply(t,function(x) x[1])
meta$month=sapply(t,function(x) x[2])
meta$day=sapply(t,function(x) x[3])
meta.s=meta
meta$ym=paste(meta$year,meta$month,sep='.')
plot(table(meta$ym))
bew=read.csv(paste(DirCode,'/data/zeit indikatoren/zeitbewertungen.csv',sep='')
,stringsAsFactors=F
)
bew=bew[,-1]
bew$id=paste(bew$year,bew$issue,bew$id,sep='.')
err=which(!meta$id%in%bew$id)
t=meta[err,]
View(t)
View(bew)
bew[which(year==2014&issue==6),]
t2=bew[which(bew$year==2014&bew$issue==6),]
View(`t2`)
grep('56757',bew$id)
# Beschreibung ------------------------------------------------------------
# dieser code liest zeit-artikel ein und bewertet sie anhand von SentiWS.
# 1. die anzahl der positiven und negativen Worten wird mit den Bewertungszahlen gewichtet und
#    aufsummiert
# 2. die anzahl der positiven und negativen worte wird berechnet
# 3. die bewertung auf positiv und negativ aufgesplittet wird angegeben.
# Letzte Modifikation -------------------------------------------------------------------
# 2015-04-29, 16:40 qdap als alternative einführen. Ausgabeordner auf Resultate legen.
# 2015-01-17, 17:00 komplet revidiert, tm package raus.
# 2015-01-15, 20:45
# 2014-12-01, 17:08
# 2014-11-25, 17:14
# 2014-06-20, 22:22
# ZIEL: QDAP HIER EINZUFÜGEN
# Setting directories for storing files -------------------------------------------------------
DirRawTexts="H:/Zeit" # text files are stored here
# DirRawTexts="E:/Zeit" # text files are stored here
# DirRawTexts="C:/Users/Dirk/Documents/Zeit-Texte"
library('qdap')
DirCode='H:/git/zeit-2' # main directory
# DirCode="C:/Users/Dirk/Documents/GitHub/zeit-2"
setwd(DirCode)
# Load register created by 'Getting_register.R' ---------------------------
# load(paste(DirCode,"/register.RData",sep=''))
sentiment<-function (text, valueword){
# returns the word, value, stem, form and frequency of each sentiment word in text
# in the data.frame valdf. And, it returns the total number of words in text
# as integer nword.
if (length(text) == 2 & text[1] == ",x") {
text = text[2]
}
text.split = sapply(strsplit(text, " "), function(x) x)
grep('\\.',text)
ind = valueword[, 1] %in% text.split
#         ind.rev=text.split%in% valueword[, 1]
# ind.neg=text.split%in% negating
valdf = valueword[ind, , drop = F]
valdf$h = sapply(valueword[ind, 1], function(x) sum(text.split %in%
x))
nwords = length(text.split)
return(list(valdf,nwords))
}
valueword=read.csv(paste(DirCode,'/data/SentiWS_v1.8c/valueword.csv',sep=''))
# extracting information from sentiment -----------------------------------
sent2=sapply(sent2,function(x)x)
extracts=function(sent2){
tab=sent2[[1]]
if (sum(tab$wert)==0){return(rep(-999,9))}
negind=tab$wert<0
posind=tab$wert>0
nneg=sum(tab$h[negind])
npos=sum(tab$h[posind])
negv=sum(tab$h[negind]*tab$wert[negind])
posv=sum(tab$h[posind]*tab$wert[posind])
# middle values desregarded -----------------------------------------------
posextind=posind&tab$wert>0.1
if (sum(posextind)){posvext=sum(tab$wert[posextind])}else{posvext=0}
negextind=negind&tab$wert<(0.1*-1)
if (sum(negextind)){negvext=sum(tab$wert[negextind])}else{negvext=0}
valuext=posvext+negvext
nwords=sent2[[2]]
value=posv+negv
res=data.frame(nneg,npos,negv,posv,nwords,value,posvext,negvext,valuext)
return(res)
}
# preparing valueword for qdap --------------------------------------------
pos=as.character(valueword['wert'>0,'wort',drop=T])
# pos=tolower(pos)
pos.w=valueword['wert'>0,'wert']
neg=as.character(valueword[valueword$wert<0,'wort',drop=T])
# neg=tolower(neg)
neg.w=valueword[valueword$wert<0,'wert']
pf=sentiment_frame(pos,neg,pos.w,neg.w)
negating=read.csv(paste(DirCode,'/data/sentistrength_de/negators.csv',sep=''),header=F,stringsAsFactors=F)
negating=unlist(negating)
# testing
# tp=polarity(text,polarity.frame=pf,negators=negating)
# tpa=tp$all[c('wc','polarity')]
# Getting subdirectories --------------------------------------------------
listsubdirs=list.files(DirRawTexts)
#  SentiWS: ------------------------------------------------------------------------
#       getting the list of positive and negative words and their values -----------------------------------------------------------------
#       valueword (lowercase) VALUEWORD (uppercase), created with valueword.R
jj=2014
liste_jahr=listsubdirs[grep(as.character(jj),listsubdirs)]
liste_jahr
k=50
sFolderTexte=paste(DirRawTexts,'/',liste_jahr[k],'/',sep='')
print(sFolderTexte)
svFile=list.files(sFolderTexte)
svFile=svFile[grep('article',svFile)]
Narticle_issue=length(svFile)
if (Narticle_issue==1){
print(paste('ACHTUNG: ',sFolderTexte,' hat nur einen Text'))
next
}
# initialize Results data.frame
Ergebnis=data.frame(matrix(NA,1,12))
colnames(Ergebnis)=c('id','qdap_value','qdap_nword'
,'sent_nneg','sent_npos','sent_negv'
,'sent_posv','sent_nwords','sent_val'
,'posextind','negextind','valuext'
)
for (i in 1:Narticle_issue){# i=1
#                                                 text<-readLines(paste(sFolderTexte,svFile[i],sep=''), ok=F,encoding="UTF-8")#, header=T,stringsAsFactors =F)
text=read.csv(paste(sFolderTexte,svFile[i],sep=''),stringsAsFactors=F,header=F)
#                         if (nrow(text)>1){
#                                 text=text[2,1]
#                         }
chrtest=sapply(text,function(x) is.character(x))
text=paste(text,collapse=' ',sep='')
tp=polarity(text,polarity.frame=pf,negators=negating)
sent=tp$all[c('polarity')]
nwords<-tp$all[c('wc')]
# sentiment ---------------------------------------------------------------
sent2=sentiment(text,valueword)
sentres=extracts(sent2)
Ergebnis[i,1:3]=c(id=gsub('article-|\\.txt','',svFile[i])
,sent
,nword=nwords
)
Ergebnis[i,4:12]=unlist(sentres)
#                                                 Ergebnis[i,'id']=gsub('article-|\\.txt','',svFile[i])
}
write.csv(Ergebnis,paste(DirCode,'/data/zeit indikatoren/Ergebnis_',liste_jahr[k],'.csv',sep=''),row.names=F)
write.csv(t,'t.csv')
getwd()
# Beschreibung ------------------------------------------------------------
# dieser code liest zeit-artikel ein und bewertet sie anhand von SentiWS.
# 1. die anzahl der positiven und negativen Worten wird mit den Bewertungszahlen gewichtet und
#    aufsummiert
# 2. die anzahl der positiven und negativen worte wird berechnet
# 3. die bewertung auf positiv und negativ aufgesplittet wird angegeben.
# Letzte Modifikation -------------------------------------------------------------------
# 2015-04-29, 16:40 qdap als alternative einführen. Ausgabeordner auf Resultate legen.
# 2015-01-17, 17:00 komplet revidiert, tm package raus.
# 2015-01-15, 20:45
# 2014-12-01, 17:08
# 2014-11-25, 17:14
# 2014-06-20, 22:22
# ZIEL: QDAP HIER EINZUFÜGEN
# Setting directories for storing files -------------------------------------------------------
DirRawTexts="H:/Zeit" # text files are stored here
# DirRawTexts="E:/Zeit" # text files are stored here
# DirRawTexts="C:/Users/Dirk/Documents/Zeit-Texte"
library('qdap')
DirCode='H:/git/zeit-2' # main directory
# DirCode="C:/Users/Dirk/Documents/GitHub/zeit-2"
setwd(DirCode)
# Load register created by 'Getting_register.R' ---------------------------
# load(paste(DirCode,"/register.RData",sep=''))
sentiment<-function (text, valueword){
# returns the word, value, stem, form and frequency of each sentiment word in text
# in the data.frame valdf. And, it returns the total number of words in text
# as integer nword.
if (length(text) == 2 & text[1] == ",x") {
text = text[2]
}
text.split = sapply(strsplit(text, " "), function(x) x)
grep('\\.',text)
ind = valueword[, 1] %in% text.split
#         ind.rev=text.split%in% valueword[, 1]
# ind.neg=text.split%in% negating
valdf = valueword[ind, , drop = F]
valdf$h = sapply(valueword[ind, 1], function(x) sum(text.split %in%
x))
nwords = length(text.split)
return(list(valdf,nwords))
}
valueword=read.csv(paste(DirCode,'/data/SentiWS_v1.8c/valueword.csv',sep=''))
# extracting information from sentiment -----------------------------------
sent2=sapply(sent2,function(x)x)
extracts=function(sent2){
tab=sent2[[1]]
if (sum(tab$wert)==0){return(rep(-999,9))}
negind=tab$wert<0
posind=tab$wert>0
nneg=sum(tab$h[negind])
npos=sum(tab$h[posind])
negv=sum(tab$h[negind]*tab$wert[negind])
posv=sum(tab$h[posind]*tab$wert[posind])
# middle values desregarded -----------------------------------------------
posextind=posind&tab$wert>0.1
if (sum(posextind)){posvext=sum(tab$wert[posextind])}else{posvext=0}
negextind=negind&tab$wert<(0.1*-1)
if (sum(negextind)){negvext=sum(tab$wert[negextind])}else{negvext=0}
valuext=posvext+negvext
nwords=sent2[[2]]
value=posv+negv
res=data.frame(nneg,npos,negv,posv,nwords,value,posvext,negvext,valuext)
return(res)
}
# preparing valueword for qdap --------------------------------------------
pos=as.character(valueword['wert'>0,'wort',drop=T])
# pos=tolower(pos)
pos.w=valueword['wert'>0,'wert']
neg=as.character(valueword[valueword$wert<0,'wort',drop=T])
# neg=tolower(neg)
neg.w=valueword[valueword$wert<0,'wert']
pf=sentiment_frame(pos,neg,pos.w,neg.w)
negating=read.csv(paste(DirCode,'/data/sentistrength_de/negators.csv',sep=''),header=F,stringsAsFactors=F)
negating=unlist(negating)
# testing
# tp=polarity(text,polarity.frame=pf,negators=negating)
# tpa=tp$all[c('wc','polarity')]
# Getting subdirectories --------------------------------------------------
listsubdirs=list.files(DirRawTexts)
#  SentiWS: ------------------------------------------------------------------------
#       getting the list of positive and negative words and their values -----------------------------------------------------------------
#       valueword (lowercase) VALUEWORD (uppercase), created with valueword.R
# Texte eines Jahres laden -----------------------------------------------
jj=2014
# list of subdirectories each year
liste_jahr=listsubdirs[grep(as.character(jj),listsubdirs)]
liste_jahr
View(t)
source('H:/git/zeit-2/code/bewertung ZEIT/Collect qdap negators.R', echo=TRUE)
DirCode='H:/git/zeit-2' # main directory
meta=read.csv(paste(DirCode,'/data/zeit indikatoren/article_ergebnis.csv',sep='')
,stringsAsFactors=F
)
meta$issue=paste(meta$i_year,'.',meta$i_month,sep='')
meta=meta[,-1]
colnames(meta)[grep('art_num',colnames(meta))]='id'
meta$id=paste(meta$issue,'.',meta$id,sep='')
# correcting some dates  --------------------------------------------------
most.freq.date=function(bymeta){
datesissue=bymeta$date
totaldatesissue=length(datesissue)
if ((sum(datesissue=='1998-04-23')+sum(datesissue=='1899-12-31'))==totaldatesissue){
mfreqdate='1998-04-23'
return(mfreqdate)
}
if (sum(datesissue=='1899-12-31')>0){
datesissue=datesissue[-which(datesissue=='1899-12-31')]}
if (sum(datesissue=='1998-04-23')>0){
datesissue=datesissue[-which(datesissue=='1998-04-23')]}
ndates=length(datesissue)
dates=table(datesissue)
mfreq=which.max(dates)
mfreqdate=names(dates)[mfreq]
return(mfreqdate)
}
newdate=by(meta[,'date',drop=F],INDICES=meta$issue,FUN=most.freq.date)
narticle=nrow(meta)
t=sapply(1:narticle,function(x) newdate[as.character(meta$issue[x])] )
t=unlist(t)
# meta$olddate=meta$date
meta$date=t
# individual corrections
meta[which(meta$issue=='2008.40'),'date']='2008-09-25'
meta[which(meta$issue=='2008.44'),'date']='2008-10-23'
plot(table(meta$date))
# correcting year, month and day
t=strsplit(meta$date,'-')#[[1]][1]
meta$year=sapply(t,function(x) x[1])
meta$month=sapply(t,function(x) x[2])
meta$day=sapply(t,function(x) x[3])
meta.s=meta
meta$ym=paste(meta$year,meta$month,sep='.')
plot(table(meta$ym))
# getting evaluations -----------------------------------------------------
bew=read.csv(paste(DirCode,'/data/zeit indikatoren/zeitbewertungen.csv',sep='')
,stringsAsFactors=F
)
bew=bew[,-1]
bew$id=paste(bew$year,bew$issue,bew$id,sep='.')
err=which(!meta$id%in%bew$id)
bew$issue
View(bew)
tail(bew)
# fuegt ratings und artikelinformationen zusammen
DirCode='H:/git/zeit-2' # main directory
# DirCode="C:/Users/Dirk/Documents/GitHub/zeit-2"
Dirlist=dir(paste(DirCode,'/data/zeit indikatoren',sep=''))
Dirlist=Dirlist[grep('Ergebnis_',Dirlist)]
i=1
if(i==1){
Ergebnis=read.csv(paste(paste(DirCode,'/data/zeit indikatoren/',Dirlist[i],sep='')))
is=gsub('Ergebnis_|\\.csv','',Dirlist[i])
is=gsub('_','\\.',is,fixed=F)
year=strsplit(is,'\\.')[[1]][1]
issue=strsplit(is,'\\.')[[1]][2]
Ergebnis[,'issue']=issue
Ergebnis[,'year']=year
}
View(Ergebnis)
i=2
head(Dirlist)
head(Dirlist,100)
source('H:/git/zeit-2/code/bewertung ZEIT/Collect qdap negators.R', echo=TRUE)
write.csv(Ergebnis,paste(DirCode,'/data/zeit indikatoren/Zeitbewertungen.csv',sep=''))
source('H:/git/zeit-2/code/bewertung ZEIT/Collect qdap negators.R', echo=TRUE)
source('H:/git/zeit-2/code/bewertung ZEIT/Collect qdap negators.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
DirCode='H:/git/zeit-2' # main directory
meta=read.csv(paste(DirCode,'/data/zeit indikatoren/article_ergebnis.csv',sep='')
,stringsAsFactors=F
)
meta$issue=paste(meta$i_year,'.',meta$i_month,sep='')
meta=meta[,-1]
colnames(meta)[grep('art_num',colnames(meta))]='id'
meta$id=paste(meta$issue,'.',meta$id,sep='')
# correcting some dates  --------------------------------------------------
most.freq.date=function(bymeta){
datesissue=bymeta$date
totaldatesissue=length(datesissue)
if ((sum(datesissue=='1998-04-23')+sum(datesissue=='1899-12-31'))==totaldatesissue){
mfreqdate='1998-04-23'
return(mfreqdate)
}
if (sum(datesissue=='1899-12-31')>0){
datesissue=datesissue[-which(datesissue=='1899-12-31')]}
if (sum(datesissue=='1998-04-23')>0){
datesissue=datesissue[-which(datesissue=='1998-04-23')]}
ndates=length(datesissue)
dates=table(datesissue)
mfreq=which.max(dates)
mfreqdate=names(dates)[mfreq]
return(mfreqdate)
}
newdate=by(meta[,'date',drop=F],INDICES=meta$issue,FUN=most.freq.date)
narticle=nrow(meta)
t=sapply(1:narticle,function(x) newdate[as.character(meta$issue[x])] )
t=unlist(t)
# meta$olddate=meta$date
meta$date=t
# individual corrections
meta[which(meta$issue=='2008.40'),'date']='2008-09-25'
meta[which(meta$issue=='2008.44'),'date']='2008-10-23'
plot(table(meta$date))
# correcting year, month and day
t=strsplit(meta$date,'-')#[[1]][1]
meta$year=sapply(t,function(x) x[1])
meta$month=sapply(t,function(x) x[2])
meta$day=sapply(t,function(x) x[3])
meta.s=meta
meta$ym=paste(meta$year,meta$month,sep='.')
plot(table(meta$ym))
# getting evaluations -----------------------------------------------------
bew=read.csv(paste(DirCode,'/data/zeit indikatoren/zeitbewertungen.csv',sep='')
,stringsAsFactors=F
)
bew=bew[,-1]
bew$id=paste(bew$year,bew$issue,bew$id,sep='.')
err=which(!meta$id%in%bew$id)
View(bew)
t=meta[err,]
err
t=meta[err,]
meta=meta[-err,]
View(t)
total <- merge(meta,bew)
?merge
total <- merge(meta,bew,'id')
View(total)
colnames(bew)
"id"          "qdap_value"  "qdap_nword"  "sent_nneg"   "sent_npos"   "sent_negv"
"sent_posv"   "sent_nwords" "sent_val"    "posextind"   "negextind"   "valuext"
"issue"       "year"
"id"          "qdap_value"  "qdap_nword"  "sent_nneg"   "sent_npos"   "sent_negv"  "sent_posv"   "sent_nwords" "sent_val"    "posextind"   "negextind"   "valuext"
"issue"       "year"
ind.n=c("qdap_value","qdap_nword","sent_nneg","sent_npos","sent_negv","sent_posv","sent_nwords","sent_val","posextind","negextind","valuext")
t=aggregate(meta[,ind.n],meta$ym)
t=aggregate(meta[,ind.n],meta$ym)
ind.n
t=aggregate(total[,ind.n],total$ym)
t=aggregate(total[,ind.n],total$ym,mean)
tt=total$ym
str(tt)
tt=as.factor(tt)
t=aggregate(total[,ind.n],tt,mean)
t=by(total[,ind.n],total$ym,mean)
View(total)
total[,ind.n]
t=by(total[,ind.n],tt,mean)
t=by(total[,ind.n,drop=F],tt,mean)
str(total)
t=by(total[,ind.n,drop=F],total$ym,mean)
t=by(total,total$ym,mean)
?by
t=by(total,as.factor(total$ym),mean)
str(bew)
head(t)
t=by(total,as.factor(total$ym),mean,na.rm=T)
plot(table(total$ym))
tt
t=aggregate(total,list(as.factor(total$ym)),mean)
View(t)
plot(t$valuext)
t=aggregate(total[,ind.n],list(as.factor(total$ym)),mean)
View(t)
plot(t$qdap_value)
plot(t$qdap_value,type='l')
plot(t$qdap_nword,type='l')
plot(t$qdap_pword,type='l')
plot(t$sent_nneg,type='l')
plot(t$sent_val)
plot(t$qdap_value)
plot(t$qdap_value,type='L')
plot(t$qdap_value,type='l')
plot(t$qdap_value
,type='l'
,ylab=''
)
,xlab=''
)
write.csv(t,paste(DirCode,'/data/zeit indikatoren/zeit.indexes.csv',sep=''))
t.median=aggregate(total[,ind.n],list(as.factor(total$ym)),median)
t=cbind(t,t.median)
write.csv(t,paste(DirCode,'/data/zeit indikatoren/zeit.indexes.csv',sep=''))
View(total)
sum(total$sent_nneg<0)
tt=total[which(total$sent_nneg<0),]
View(tt)
View(tt)
grep('sent',colnames(total))
sents=grep('sent',colnames(total))
tt=total[,sents]==-999
tt=total[,sents,drop=F]==-999
head(tt)
colSums(tt)
zero_sent_ind=total[,sents,drop=F]==-999
tt=total[zero_sent,sents]
tt=total[zero_sent_id,sents]
tt=total[zero_sent_ind,sents]
View(tt)
total[total==-999]=0
ind.n=c("qdap_value","qdap_nword","sent_nneg","sent_npos","sent_negv","sent_posv","sent_nwords","sent_val","posextind","negextind","valuext"a)
t=aggregate(total[,ind.n],list(as.factor(total$ym)),mean)
ind.n=c("qdap_value","qdap_nword","sent_nneg","sent_npos","sent_negv","sent_posv","sent_nwords","sent_val","posextind","negextind","valuext")
t=aggregate(total[,ind.n],list(as.factor(total$ym)),mean)
t.median=aggregate(total[,ind.n],list(as.factor(total$ym)),median)
t=cbind(t,t.median)
write.csv(t,paste(DirCode,'/data/zeit indikatoren/zeit.indexes.csv',sep=''))
write.csv(t,paste(DirCode,'/data/zeit indikatoren/zeit.indexes.csv',sep=''))
?qdap
data(negation.words)
negation.words
negating=read.csv(paste(DirCode,'/data/sentistrength_de/negators.csv',sep=''),header=F,stringsAsFactors=F)
negating
write.csv(total,paste(DirCode,'/data/zeit indikatoren/zeit.article.and.eval.csv',sep=''))
